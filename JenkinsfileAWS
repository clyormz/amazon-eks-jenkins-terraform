pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID="343843244119"
        AWS_DEFAULT_REGION="us-east-1"
        IMAGE_REPO_NAME="wonderapp"
        IMAGE_TAG="latest"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
		DOCKERHUB_CREDENTIALS=credentials('dockerHubCredentials')
        EP = "eyJwYXlsb2FkIjoiTlU2SHpVMVAzNkdQY2ZZNDRTK0l4Skl4eG5mL05COXV5TnN4NE56eUl3eGQzNjZ1ajdaaFlIWmorQ1B0ZDBNTWhJOStZeWRJOGp5bCtaY0NJajVzckg1N1l4aUZ0UlFyZnN4OUxNaVBZSlFqSWVXdnJhRUUxSklNRUpRQWp0bUxnb3N5NzRPVldXUU5zZW53YmNuSDdmVS9YRDc4VklON2poNTZFeSsxeHREd1FNeVJwcndSK3MxWjNIQkhSUS9KYWdhTHgvb2wvQzg1UVJkY1BHQnJ5bWwrRkhUQXJkbXhTQW9MdEEyM1ROWitzNURjaWJGTG9SZWxkdjIydlBYMlRzbEdPVWo2cTFrdVM0VGd6YjAzQm1wZG94aFV0Qmo2Z1dOSnRlL0tkY1FMS01VUG5vV21mTzA5R2pmKy9yVlpPKzdYblZVRWZ4VDVOQkpzQlR2TWJMSk1LdDMvNjk4WjRBUEJ1OHl5TkdUSUNTOVBSaG82MTZrTXZXbC9QMXE5QWlUSmo2NXBsb2VWZDE1cmwyUEN2RGRYVk1vaXkyNVdhQnMrYW1TYTE1NCtEVnhmUWIveVNDRmR1TGJQbUdKV0Yya3VmZTFhMlRVS2F2MXArRnljR25zRDJoSUk1b0I5NWhnajJUVlpSUU9penV2ek5Xc2JuTVRndThDakhzWmRHOEZXWHBia0Q1bzhRVkFHQzRGZ1ZUbG1CZnVxOTh3TWdxRnJhMVhzQTlNVGxWUlp6em0xaFE5QkEvbHR2bGtpYjl3bnR3Y0UrZWdWY3Q5V0grTm5vUzNSNVZGNDRXbWU4aDRIakkrQVNyT0g5SkVvTFV1bXZXaW1tZEdvSHQ4VmhaOUxDUjFTQ0NkT1N6TEFrNXpkTzBheG51K3lzaURiMGppblJEMFJRNjVLWklMeGh3THBRZ2lteXJLaTJ4N0l5TUlLeTRJN0xzNzhxZTV6dkk4YjNIbDBHOW4reERxWGJnMThYbDlQTVlOSUdsb3dhcTJvSkZQb1IvaWFpeTEvV1Qxd3A4cnpQWG5KdDNzdVlMeEtDM05rV2VFYVcyeExGODU5MVlCMENqZjFJN3NzVHlzb0Q3WmNmUVgrVUNvWlo0VUJ4MmdNZzl6WG00OXpXbTYwMVhIRE1zVjdGZkFLVGgvQkFtV0hsR0RNTFZKbnBqc3lrcXQzeCtFc0ZCVmFxTUZKMVMyZlNDL3pYQURkNy9VMUNsTEtGTDBKWkdXTTVrdDhseXFEc0RrdENmWnVvUjV6YmFrUmlHK3EyV1lwMDQ3ZnFXWElJZTJQcHg2b3hWY0VudFZWK3Fjd3FkYXJMczV4T0xxMmpiUUlyMmZ0WGV1UXhrMTlWRldDNlRCdHpVallBa3N2bVAxZFNzRWtEMjNFTXE5OUEvU1ZoWkllUDUvTVZ3YXp3aVg4aGhpNndqSWJuZVdCbHVXSThjVU9pWUxoOVBjSzVzNnptWUlZU1IyRHFIRkNWblhwUTUwSzg5NUpWaStYSGxHTVFMNEh5cVhmVXpmSzhtRDk4aWZ2TEtSaG9KMFJ6a1lORk9pT0ZkeVFVejlXN2RxekQ0N2tBSkZRYzBMdGJkOTRtOFJ2YmFaT245bkZCeVNXZTZvYy9zdlBtVWk4M20wWVoyNDNGQU1nT1hNcHhHUDE2Mmtnb05tdWswSFdRb0xxVVd3d1dYM2R3a0tlM2hxZ09WY3RQUnI5ZUxmaGpDZnl5dkFCRFI2WmgrVU1XYyt3YUN3TlVYeDFtRFZRRDRaSEpXZU52RDVwYmJRVXl3VFpFNEJBZ1Ribi80ZEhJQUo0Qk12MUZxUUo2NEZQcDVLbVZOSXJZd0NGM1AwPSIsImRhdGFrZXkiOiJBUUVCQUhod20wWWFJU0plUnRKbTVuMUc2dXFlZWtYdW9YWFBlNVVGY2U5UnE4LzE0d0FBQUg0d2ZBWUpLb1pJaHZjTkFRY0dvRzh3YlFJQkFEQm9CZ2txaGtpRzl3MEJCd0V3SGdZSllJWklBV1VEQkFFdU1CRUVER29kajhRZ1RLdnBvRXA4TWdJQkVJQTdvZFlQN3VONlRhL29tVnBCZnZzVzZoLzdhNFptdW5UdktZMmExYWJyblNCRERlWjNpRW1sNm9MVE5BckpLakJhakZJWXRPVUFjL2wwVHJrPSIsInZlcnNpb24iOiIyIiwidHlwZSI6IkRBVEFfS0VZIiwiZXhwaXJhdGlvbiI6MTY0OTY5MTA4NH0="
    }
   
    stages {
		stage('Login') {

			steps {
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
			}
		}
        
         stage('Logging into AWS ECR') {
            steps {
                script {
                sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS -p ${EP} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                }
                 
            }
        }
        
        stage('Cloning Git') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/sd031/aws_codebuild_codedeploy_nodeJs_demo.git']]])     
            }
        }
  
    // Building Docker images
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build "${IMAGE_REPO_NAME}:${IMAGE_TAG}"
        }
      }
    }
   
    // Uploading Docker images into AWS ECR
    stage('Pushing to ECR') {
     steps{  
         script {
                sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:$IMAGE_TAG"
                sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
         }
        }
      }
    }
}
